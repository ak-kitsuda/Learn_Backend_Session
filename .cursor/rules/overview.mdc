---
description: 
globs: 
alwaysApply: false
---
# セッション/クッキー認証 学習プロジェクト概要

## 学習目標
セッション/クッキーベースの認証システムを理解し、JWTとの違いを明確に把握する

## 技術スタック
- **バックエンド**: Express.js + SQLite
- **フロントエンド**: Vue.js
- **認証方式**: セッション/クッキー

## 段階的学習アプローチ

### Phase1: バックエンド基盤構築 【現在のフェーズ】
参照: [phase1-guide.mdc](mdc:phase1-guide.mdc)
- Express.jsサーバーセットアップ
- SQLiteデータベース接続
- 基本的なルーティング設定
- ミドルウェア設定

### Phase2: 認証システム実装 【次のフェーズ】
*Phase1完了後にガイド作成*
- ユーザーモデル作成
- パスワードハッシュ化（bcrypt）
- セッション設定（express-session）
- セッションストア（SQLite）
- 認証ミドルウェア

### Phase3: Todo機能実装 【Phase2後】
*段階的にガイド作成*
- Todoモデル作成
- CRUD API実装
- 認可チェック（ユーザー所有権）
- エラーハンドリング

### Phase4: フロントエンド実装 【Phase3後】
*段階的にガイド作成*
- Vue.jsプロジェクトセットアップ
- 認証コンポーネント
- Todoコンポーネント
- API通信（axios/fetch）

### Phase5: セキュリティ・最適化 【Phase4後】
*段階的にガイド作成*
- CORS設定
- セキュリティヘッダー
- バリデーション強化
- エラーメッセージ最適化

## 学習の進め方
1. 各フェーズのガイドを読む
2. 実際にコードを書く
3. 動作確認を行う
4. チェックリストで完了を確認
5. 次のフェーズに進む

## 重要なポイント
- **段階的学習**: 1つずつ確実に理解
- **理論と実践**: 「なぜ？」を理解してからコード作成
- **エラー体験**: 意図的にエラーを起こして学習
- **動作確認**: 各ステップで必ず動作確認

## 現在の状況
**Phase1から開始してください**
[Phase1ガイド](mdc:phase1-guide.mdc)を参照して、バックエンド基盤構築から始めましょう。
